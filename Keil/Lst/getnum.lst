


ARM Macro Assembler    Page 1 


    1 00000000         ;*******************************************************
                       *******
    2 00000000         ;
    3 00000000         ; HAW Hamburg, Department Informatik
    4 00000000         ; Praktikum Rechnerstrukturen und Maschinennahe Programm
                       ierung
    5 00000000         ;
    6 00000000         ; Zweck:  Asm-Programm zu A4: 'Stringsortierung'
    7 00000000         ; Dateiname: getNum.s
    8 00000000         ; History:
    9 00000000         ;
   10 00000000         ; 5'2014  Cnz Aufbereitung für Aufgabenstellung 
   11 00000000         ; 7'2013  Beh Erstversion für Arm-Cortex M4
   12 00000000         ; 7'2005  Msl   Urfassung für Pentium (GEME-System)
   13 00000000         ;
   14 00000000         ;*******************************************************
                       *******
   15 00000000         
   16 00000000         
   17 00000000                 IMPORT           TFT_puts
   18 00000000                 IMPORT           TFT_cls
   19 00000000                 IMPORT           TFT_gotoxy
   20 00000000                 IMPORT           Delay
   21 00000000         
   22 00000000         ;********************************************
   23 00000000         ; Data section, aligned on 4-byte boundary
   24 00000000         ;********************************************
   25 00000000         ; ######################
   26 00000000                 AREA             MyData, DATA, align = 2
   27 00000000         
   28 00000000         ; start and end of ASCII numbers as decimal
   29 00000000 00000030 
                       NUMBER_START
                               equ              48
   30 00000000 00000039 
                       NUMBER_END
                               equ              57
   31 00000000         
   32 00000000         
   33 00000000         ;********************************************
   34 00000000         ; Code section, aligned on 4-byte boundary
   35 00000000         ;********************************************
   36 00000000         
   37 00000000                 AREA             MyCode, CODE, readonly, align =
 3
   38 00000000         
   39 00000000         ;--------------------------------------------
   40 00000000         ; main subroutine
   41 00000000         ;--------------------------------------------
   42 00000000                 GLOBAL           getNum_asm
   43 00000000         
   44 00000000         ;-------------------------------------------------------
                       ------------------------------------------ 
   45 00000000         getNum_asm
                               PROC
   46 00000000 B50E            push{r1          - r3, lr}
   47 00000002         
   48 00000002 4602            MOV              r2, r0
   49 00000004 F04F 0000       MOV              r0, #0



ARM Macro Assembler    Page 2 


   50 00000008 F04F 030A       MOV              r3, #10
   51 0000000C         
   52 0000000C         WHILE_STRING
   53 0000000C F812 1B01       LDRB             r1, [r2], #1
   54 00000010 2900            CMP              r1, #0
   55 00000012 D909            BLS              WHILE_STRING_END
   56 00000014         IF_NUMBER
   57 00000014 2930            CMP              r1, #NUMBER_START
   58 00000016 D306            BLO              IF_NUMBER_END
   59 00000018         
   60 00000018 2939            CMP              r1, #NUMBER_END
   61 0000001A D804            BHI              IF_NUMBER_END
   62 0000001C         
   63 0000001C         
   64 0000001C FB00 F003       MUL              r0, r0, r3
   65 00000020 F1A1 0130       SUB              r1, r1, #NUMBER_START
   66 00000024 4408            ADD              r0, r0, r1
   67 00000026         
   68 00000026         IF_NUMBER_END
   69 00000026         
   70 00000026 E7F1            B                WHILE_STRING
   71 00000028         WHILE_STRING_END
   72 00000028         
   73 00000028 E8BD 400E       pop{r1           - r3, lr}
   74 0000002C 4770            bx               lr
   75 0000002E         
   76 0000002E E7FE    forever b                forever     ; nowhere to retun 
                                                            if main ends  
   77 00000030         
   78 00000030                 ENDP
   79 00000030         
   80 00000030                 ALIGN            4
   81 00000030                 END
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4.fp --apcs=int
erwork --depend=.\obj\getnum.d -o.\obj\getnum.o -IC:\Keil_v5\ARM\RV31\INC -IC:\
Keil_v5\ARM\PACK\ARM\CMSIS\4.1.1\CMSIS\Include -IC:\Keil_v5\ARM\Inc\ST\STM32F4x
x --list=.\lst\getnum.lst getNum.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

MyData 00000000

Symbol: MyData
   Definitions
      At line 26 in file getNum.s
   Uses
      None
Comment: MyData unused
1 symbol



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

IF_NUMBER 00000014

Symbol: IF_NUMBER
   Definitions
      At line 56 in file getNum.s
   Uses
      None
Comment: IF_NUMBER unused
IF_NUMBER_END 00000026

Symbol: IF_NUMBER_END
   Definitions
      At line 68 in file getNum.s
   Uses
      At line 58 in file getNum.s
      At line 61 in file getNum.s

MyCode 00000000

Symbol: MyCode
   Definitions
      At line 37 in file getNum.s
   Uses
      None
Comment: MyCode unused
WHILE_STRING 0000000C

Symbol: WHILE_STRING
   Definitions
      At line 52 in file getNum.s
   Uses
      At line 70 in file getNum.s
Comment: WHILE_STRING used once
WHILE_STRING_END 00000028

Symbol: WHILE_STRING_END
   Definitions
      At line 71 in file getNum.s
   Uses
      At line 55 in file getNum.s
Comment: WHILE_STRING_END used once
forever 0000002E

Symbol: forever
   Definitions
      At line 76 in file getNum.s
   Uses
      At line 76 in file getNum.s
Comment: forever used once
getNum_asm 00000000

Symbol: getNum_asm
   Definitions
      At line 45 in file getNum.s
   Uses
      At line 42 in file getNum.s
Comment: getNum_asm used once
7 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

NUMBER_END 00000039

Symbol: NUMBER_END
   Definitions
      At line 30 in file getNum.s
   Uses
      At line 60 in file getNum.s
Comment: NUMBER_END used once
NUMBER_START 00000030

Symbol: NUMBER_START
   Definitions
      At line 29 in file getNum.s
   Uses
      At line 57 in file getNum.s
      At line 65 in file getNum.s

2 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

Delay 00000000

Symbol: Delay
   Definitions
      At line 20 in file getNum.s
   Uses
      None
Comment: Delay unused
TFT_cls 00000000

Symbol: TFT_cls
   Definitions
      At line 18 in file getNum.s
   Uses
      None
Comment: TFT_cls unused
TFT_gotoxy 00000000

Symbol: TFT_gotoxy
   Definitions
      At line 19 in file getNum.s
   Uses
      None
Comment: TFT_gotoxy unused
TFT_puts 00000000

Symbol: TFT_puts
   Definitions
      At line 17 in file getNum.s
   Uses
      None
Comment: TFT_puts unused
4 symbols
345 symbols in table
